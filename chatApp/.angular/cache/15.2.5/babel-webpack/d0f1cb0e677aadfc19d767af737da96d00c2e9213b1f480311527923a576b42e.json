{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class WebSocketService {\n  constructor() {\n    this.chatMessages = [];\n  }\n  openWebSocket() {\n    this.webSocket = new WebSocket('ws://localhost:8080/chat');\n    this.webSocket.onopen = event => {\n      console.log('Open', event);\n    };\n    this.webSocket.onmessage = event => {\n      const chatMessageDto = JSON.parse(event.data);\n      this.chatMessages.push(chatMessageDto);\n    };\n    this.webSocket.onclose = event => {\n      console.log(\"Close: \", event);\n    };\n  }\n  sendMessage(chatMessageDto) {\n    this.webSocket.send(JSON.stringify(chatMessageDto));\n  }\n  closeWebSocket() {\n    this.webSocket.close();\n  }\n}\nWebSocketService.ɵfac = function WebSocketService_Factory(t) {\n  return new (t || WebSocketService)();\n};\nWebSocketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WebSocketService,\n  factory: WebSocketService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,gBAAgB;EAI3BC;IADA,iBAAY,GAAqB,EAAE;EACnB;EAETC,aAAa;IAClB,IAAI,CAACC,SAAS,GAAG,IAAIC,SAAS,CAAC,0BAA0B,CAAC;IAE1D,IAAI,CAACD,SAAS,CAACE,MAAM,GAAIC,KAAK,IAAI;MAChCC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,KAAK,CAAC;IAC5B,CAAC;IAED,IAAI,CAACH,SAAS,CAACM,SAAS,GAAIH,KAAK,IAAI;MACnC,MAAMI,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,CAACO,IAAI,CAAC;MAC7C,IAAI,CAACC,YAAY,CAACC,IAAI,CAACL,cAAc,CAAC;IACxC,CAAC;IAED,IAAI,CAACP,SAAS,CAACa,OAAO,GAAIV,KAAK,IAAI;MACjCC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK,CAAC;IAC/B,CAAC;EACH;EAEOW,WAAW,CAACP,cAA8B;IAC/C,IAAI,CAACP,SAAS,CAACe,IAAI,CAACP,IAAI,CAACQ,SAAS,CAACT,cAAc,CAAC,CAAC;EACrD;EAEOU,cAAc;IACnB,IAAI,CAACjB,SAAS,CAACkB,KAAK,EAAE;EACxB;;AA7BWrB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAsB,SAAhBtB,gBAAgB;EAAAuB,YAFf;AAAM","names":["WebSocketService","constructor","openWebSocket","webSocket","WebSocket","onopen","event","console","log","onmessage","chatMessageDto","JSON","parse","data","chatMessages","push","onclose","sendMessage","send","stringify","closeWebSocket","close","factory","providedIn"],"sourceRoot":"","sources":["E:\\studia\\chatFE\\chatApp\\src\\app\\services\\web-socket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {ChatMessageDto} from \"../models/chatMessageDto\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebSocketService {\r\n\r\n  webSocket!: WebSocket;\r\n  chatMessages: ChatMessageDto[] = [];\r\n  constructor() { }\r\n\r\n  public openWebSocket() {\r\n    this.webSocket = new WebSocket('ws://localhost:8080/chat');\r\n\r\n    this.webSocket.onopen = (event) => {\r\n      console.log('Open', event);\r\n    };\r\n\r\n    this.webSocket.onmessage = (event) => {\r\n      const chatMessageDto = JSON.parse(event.data);\r\n      this.chatMessages.push(chatMessageDto);\r\n    };\r\n\r\n    this.webSocket.onclose = (event) => {\r\n      console.log(\"Close: \", event);\r\n    };\r\n  }\r\n\r\n  public sendMessage(chatMessageDto: ChatMessageDto) {\r\n    this.webSocket.send(JSON.stringify(chatMessageDto));\r\n  }\r\n\r\n  public closeWebSocket() {\r\n    this.webSocket.close();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}