{"ast":null,"code":"import { interval } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ChatService {\n  constructor(http) {\n    this.http = http;\n  }\n  getChatMessages() {\n    return this.http.get('http://localhost:4000/chat/getAllMessages');\n  }\n  sendMessage(chatMessageDto) {\n    return this.http.post('http://localhost:4000/chat/postMessage', chatMessageDto);\n  }\n  getChatMessagesPolling(intervalTime) {\n    return interval(intervalTime).pipe(switchMap(() => this.getChatMessages()));\n  }\n  deleteMessage(id) {\n    return this.http.post('http://localhost:4000/chat/deleteMessage', {\n      id\n    });\n  }\n}\nChatService.ɵfac = function ChatService_Factory(t) {\n  return new (t || ChatService)(i0.ɵɵinject(i1.HttpClient));\n};\nChatService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ChatService,\n  factory: ChatService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,QAAQ,QAAQ,MAAM;AAC3C,SAASC,SAAS,QAAQ,gBAAgB;;;AAM1C,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAEjCC,eAAe;IACpB,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAmB,2CAA2C,CAAC;EACrF;EAEOC,WAAW,CAACC,cAA8B;IAC/C,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAiB,wCAAwC,EAAED,cAAc,CAAC;EACjG;EAEOE,sBAAsB,CAACC,YAAoB;IAChD,OAAOX,QAAQ,CAACW,YAAY,CAAC,CAACC,IAAI,CAChCX,SAAS,CAAC,MAAM,IAAI,CAACI,eAAe,EAAE,CAAC,CACxC;EACH;EAEOQ,aAAa,CAACC,EAAU;IAC7B,OAAO,IAAI,CAACV,IAAI,CAACK,IAAI,CAAC,0CAA0C,EAAE;MAAEK;IAAE,CAAE,CAAC;EAC3E;;AApBWZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAa,SAAXb,WAAW;EAAAc,YAFV;AAAM","names":["interval","switchMap","ChatService","constructor","http","getChatMessages","get","sendMessage","chatMessageDto","post","getChatMessagesPolling","intervalTime","pipe","deleteMessage","id","factory","providedIn"],"sourceRoot":"","sources":["E:\\studia\\chatFE\\chatApp\\src\\app\\services\\chat-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, interval } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ChatMessageDto } from \"../models/chatMessageDto\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getChatMessages(): Observable<ChatMessageDto[]> {\r\n    return this.http.get<ChatMessageDto[]>('http://localhost:4000/chat/getAllMessages');\r\n  }\r\n\r\n  public sendMessage(chatMessageDto: ChatMessageDto): Observable<ChatMessageDto> {\r\n    return this.http.post<ChatMessageDto>('http://localhost:4000/chat/postMessage', chatMessageDto);\r\n  }\r\n\r\n  public getChatMessagesPolling(intervalTime: number): Observable<ChatMessageDto[]> {\r\n    return interval(intervalTime).pipe(\r\n      switchMap(() => this.getChatMessages())\r\n    );\r\n  }\r\n\r\n  public deleteMessage(id: number): Observable<any> {\r\n    return this.http.post('http://localhost:4000/chat/deleteMessage', { id });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}