{"ast":null,"code":"import { ChatMessageDto } from \"../models/chatMessageDto\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/chat-service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ChatComponent_li_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 29)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const chatMessage_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", chatMessage_r3.name, \": \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", chatMessage_r3.message, \" \");\n  }\n}\nexport class ChatComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.chatMessages = [];\n  }\n  sendMessage(sendForm) {\n    const name = sendForm.value.user;\n    const message = sendForm.value.message;\n    const photo = '';\n    const chatMessageDto = new ChatMessageDto(name, message, photo);\n    this.chatService.sendMessage(chatMessageDto).subscribe(() => {\n      sendForm.controls['message'].reset();\n    });\n  }\n  ngOnInit() {\n    this.chatService.getChatMessagesPolling(5000).subscribe(messages => {\n      this.chatMessages = messages;\n    });\n  }\n  ngOnDestroy() {\n    // No need to close anything for REST API communication\n  }\n}\nChatComponent.ɵfac = function ChatComponent_Factory(t) {\n  return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n};\nChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatComponent,\n  selectors: [[\"cf-chat\"]],\n  decls: 38,\n  vars: 1,\n  consts: [[1, \"navbar\", \"navbar-expand-md\", \"navbar-dark\", \"bg-dark\"], [\"href\", \"#\", 1, \"navbar-brand\"], [\"type\", \"button\", \"http-toggle\", \"collapse\", \"http-target\", \"#navbarsExample04\", \"aria-controls\", \"navbarsExample04\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [\"id\", \"navbarsExample04\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\", \"mr-auto\"], [1, \"nav-item\", \"active\"], [\"href\", \"#\", 1, \"nav-link\"], [1, \"sr-only\"], [1, \"nav-item\"], [\"routerLink\", \"/cf-login\", 1, \"nav-link\"], [\"href\", \"#\", \"tabindex\", \"-1\", \"aria-disabled\", \"true\", 1, \"nav-link\", \"disabled\"], [1, \"form-inline\", \"my-2\", \"my-md-0\"], [\"type\", \"text\", \"placeholder\", \"Search\", 1, \"form-control\"], [1, \"chat\"], [1, \"container\"], [1, \"chat-content\"], [1, \"card\"], [1, \"list-group\", \"list-group-flush\"], [\"messageList\", \"\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngSubmit\"], [\"sendForm\", \"ngForm\"], [1, \"chat-send\", \"row\"], [1, \"col-2\"], [\"type\", \"text\", \"name\", \"user\", \"id\", \"input-user\", \"ngModel\", \"\", 1, \"form-control\"], [1, \"col-8\"], [\"type\", \"text\", \"name\", \"message\", \"id\", \"input-message\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"list-group-item\"]],\n  template: function ChatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"header\")(1, \"nav\", 0)(2, \"a\", 1);\n      i0.ɵɵtext(3, \"Chat app\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵelement(5, \"span\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"ul\", 5)(8, \"li\", 6)(9, \"a\", 7);\n      i0.ɵɵtext(10, \"Home \");\n      i0.ɵɵelementStart(11, \"span\", 8);\n      i0.ɵɵtext(12, \"(current)\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"li\", 9)(14, \"a\", 10);\n      i0.ɵɵtext(15, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"li\", 9)(17, \"a\", 11);\n      i0.ɵɵtext(18, \"Disabled\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"form\", 12);\n      i0.ɵɵelement(20, \"input\", 13);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(21, \"main\", 14)(22, \"div\", 15)(23, \"div\", 16)(24, \"div\", 17)(25, \"ul\", 18, 19);\n      i0.ɵɵtemplate(27, ChatComponent_li_27_Template, 5, 2, \"li\", 20);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(28, \"form\", 21, 22);\n      i0.ɵɵlistener(\"ngSubmit\", function ChatComponent_Template_form_ngSubmit_28_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r2 = i0.ɵɵreference(29);\n        return i0.ɵɵresetView(ctx.sendMessage(_r2));\n      });\n      i0.ɵɵelementStart(30, \"div\", 23)(31, \"div\", 24);\n      i0.ɵɵelement(32, \"input\", 25);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 26);\n      i0.ɵɵelement(34, \"input\", 27);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 24)(36, \"button\", 28);\n      i0.ɵɵtext(37, \"Send\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(27);\n      i0.ɵɵproperty(\"ngForOf\", ctx.chatMessages);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\".chat[_ngcontent-%COMP%] {\\r\\n  margin-top: 10rem;\\r\\n}\\r\\n\\r\\ndiv.chat-content[_ngcontent-%COMP%] {\\r\\n  border-radius: .25rem;\\r\\n  height: 40rem;\\r\\n  margin-bottom: 2rem;\\r\\n}\\r\\n\\r\\n.card[_ngcontent-%COMP%] {\\r\\n  height: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhdC9jaGF0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsYUFBYTtFQUNiLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFlBQVk7QUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi5jaGF0IHtcclxuICBtYXJnaW4tdG9wOiAxMHJlbTtcclxufVxyXG5cclxuZGl2LmNoYXQtY29udGVudCB7XHJcbiAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xyXG4gIGhlaWdodDogNDByZW07XHJcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcclxufVxyXG5cclxuLmNhcmQge1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAGA,SAAQA,cAAc,QAAO,0BAA0B;;;;;;;IC2B7CC,8BAAqE;IAEjEA,YACF;IAAAA,iBAAS;IACTA,4BAAM;IACJA,YACF;IAAAA,iBAAO;;;;IAJLA,eACF;IADEA,qDACF;IAEEA,eACF;IADEA,uDACF;;;AD1BZ,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAF/B,iBAAY,GAAqB,EAAE;EAEY;EAE/CC,WAAW,CAACC,QAAgB;IAC1B,MAAMC,IAAI,GAAGD,QAAQ,CAACE,KAAK,CAACC,IAAI;IAChC,MAAMC,OAAO,GAAGJ,QAAQ,CAACE,KAAK,CAACE,OAAO;IACtC,MAAMC,KAAK,GAAG,EAAE;IAChB,MAAMC,cAAc,GAAG,IAAIZ,cAAc,CAACO,IAAI,EAAEG,OAAO,EAAEC,KAAK,CAAC;IAC/D,IAAI,CAACP,WAAW,CAACC,WAAW,CAACO,cAAc,CAAC,CAACC,SAAS,CAAC,MAAK;MAC1DP,QAAQ,CAACQ,QAAQ,CAAC,SAAS,CAAC,CAACC,KAAK,EAAE;IACtC,CAAC,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACZ,WAAW,CAACa,sBAAsB,CAAC,IAAI,CAAC,CAACJ,SAAS,CAAEK,QAAQ,IAAI;MACnE,IAAI,CAACC,YAAY,GAAGD,QAAQ;IAC9B,CAAC,CAAC;EACJ;EAEAE,WAAW;IACT;EAAA;;AAvBSlB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCV1BxB,8BAAQ;MAE6BA,wBAAQ;MAAAA,iBAAI;MAC7CA,iCAA0L;MACxLA,0BAAyC;MAC3CA,iBAAS;MAETA,8BAA4D;MAGzBA,sBAAK;MAAAA,gCAAsB;MAAAA,0BAAS;MAAAA,iBAAO;MAE1EA,8BAAqB;MACwBA,sBAAK;MAAAA,iBAAI;MAEtDA,8BAAqB;MACsDA,yBAAQ;MAAAA,iBAAI;MAGzFA,iCAAuC;MACrCA,6BAA6D;MAC/DA,iBAAO;MAIbA,iCAAmB;MAKTA,+DAOK;MACPA,iBAAK;MAGTA,qCAA4D;MAAtDA;QAAAA;QAAA;QAAA,OAAYA,mCAAqB;MAAA,EAAC;MACtCA,gCAA2B;MAEvBA,6BAA4E;MAC9EA,iBAAM;MACNA,gCAAmB;MACjBA,6BAAkF;MACpFA,iBAAM;MACNA,gCAAmB;MAC6BA,qBAAI;MAAAA,iBAAS;;;MApBPA,gBAAe;MAAfA,0CAAe","names":["ChatMessageDto","i0","ChatComponent","constructor","chatService","sendMessage","sendForm","name","value","user","message","photo","chatMessageDto","subscribe","controls","reset","ngOnInit","getChatMessagesPolling","messages","chatMessages","ngOnDestroy","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\studia\\chatFE\\chatApp\\src\\app\\chat\\chat.component.ts","E:\\studia\\chatFE\\chatApp\\src\\app\\chat\\chat.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {NgForm} from \"@angular/forms\";\r\nimport {ChatService} from \"../services/chat-service\";\r\nimport {ChatMessageDto} from \"../models/chatMessageDto\";\r\n\r\n@Component({\r\n  selector: 'cf-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.css']\r\n})\r\nexport class ChatComponent implements OnInit, OnDestroy{\r\n\r\n  chatMessages: ChatMessageDto[] = [];\r\n\r\n  constructor(private chatService: ChatService) {}\r\n\r\n  sendMessage(sendForm: NgForm) {\r\n    const name = sendForm.value.user;\r\n    const message = sendForm.value.message;\r\n    const photo = '';\r\n    const chatMessageDto = new ChatMessageDto(name, message, photo);\r\n    this.chatService.sendMessage(chatMessageDto).subscribe(() => {\r\n      sendForm.controls['message'].reset();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.chatService.getChatMessagesPolling(5000).subscribe((messages) => {\r\n      this.chatMessages = messages;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // No need to close anything for REST API communication\r\n  }\r\n}\r\n","<header>\r\n  <nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand\" href=\"#\">Chat app</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" http-toggle=\"collapse\" http-target=\"#navbarsExample04\" aria-controls=\"navbarsExample04\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarsExample04\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/cf-login\">Login</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n        </li>\r\n      </ul>\r\n      <form class=\"form-inline my-2 my-md-0\">\r\n        <input class=\"form-control\" type=\"text\" placeholder=\"Search\">\r\n      </form>\r\n    </div>\r\n  </nav>\r\n</header>\r\n<main class=\"chat\">\r\n  <div class=\"container\">\r\n    <div class=\"chat-content\">\r\n      <div class=\"card\">\r\n        <ul class=\"list-group list-group-flush\" #messageList>\r\n          <li class=\"list-group-item\" *ngFor=\"let chatMessage of chatMessages\">\r\n            <strong>\r\n              {{chatMessage.name}}:\r\n            </strong>\r\n            <span>\r\n              {{chatMessage.message}}\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <form (ngSubmit)=\"sendMessage(sendForm)\" #sendForm=\"ngForm\">\r\n      <div class=\"chat-send row\">\r\n        <div class=\"col-2\">\r\n          <input type=\"text\" class=\"form-control\" name=\"user\" id=\"input-user\" ngModel>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <input type=\"text\" class=\"form-control\" name=\"message\" id=\"input-message\" ngModel>\r\n        </div>\r\n        <div class=\"col-2\">\r\n          <button type=\"submit\" class=\"btn btn-primary\">Send</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</main>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}