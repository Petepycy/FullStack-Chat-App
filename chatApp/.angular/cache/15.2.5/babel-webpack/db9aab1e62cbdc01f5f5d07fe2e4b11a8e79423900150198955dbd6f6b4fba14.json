{"ast":null,"code":"import { ChatMessageDto } from \"../models/chatMessageDto\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/chat-service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nfunction ChatComponent_li_19_img_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 27);\n  }\n  if (rf & 2) {\n    const chatMessage_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"src\", \"data:\" + chatMessage_r3.fileType + \";base64,\" + chatMessage_r3.photo, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ChatComponent_li_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 25)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ChatComponent_li_19_img_5_Template, 1, 1, \"img\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const chatMessage_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", chatMessage_r3.name, \": \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", chatMessage_r3.message, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", chatMessage_r3.photo);\n  }\n}\nexport class ChatComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.chatMessages = [];\n    this.selectedFile = null;\n  }\n  sendMessage(sendForm) {\n    const name = sendForm.value.user;\n    const message = sendForm.value.message;\n    if (this.selectedFile) {\n      console.log(\"selectedFile before reader:\", this.selectedFile);\n      const reader = new FileReader();\n      reader.readAsDataURL(this.selectedFile);\n      reader.onload = () => {\n        console.log(\"selectedFile after reader:\", this.selectedFile);\n        const base64 = reader.result;\n        const photo = base64.split(',')[1];\n        if (this.selectedFile) {\n          const fileName = this.selectedFile.name;\n          const fileType = this.selectedFile.type;\n          const chatMessageDto = new ChatMessageDto(name, message, photo, fileName, fileType);\n          this.chatService.sendMessage(chatMessageDto).subscribe(() => {\n            sendForm.controls['message'].reset();\n            this.selectedFile = null;\n          });\n        } else {\n          console.error(\"Selected file is null\");\n        }\n      };\n    } else {\n      const chatMessageDto = new ChatMessageDto(name, message);\n      this.chatService.sendMessage(chatMessageDto).subscribe(() => {\n        sendForm.controls['message'].reset();\n        this.selectedFile = null;\n      });\n    }\n  }\n  ngOnInit() {\n    this.chatService.getChatMessagesPolling(5000).subscribe(messages => {\n      this.chatMessages = messages;\n    });\n  }\n  ngOnDestroy() {\n    // No need to close anything for REST API communication\n  }\n  onFileSelected(event) {\n    setTimeout(() => {\n      this.selectedFile = event.target.files[0];\n      console.log(\"File selected:\", this.selectedFile);\n    }, 500);\n  }\n  createImageFromBlob(image) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => {\n      // set the image data to a variable\n      const photo = reader.result;\n      // set the image data to an image element's source\n      const img = new Image();\n      img.src = photo;\n      // append the image element to a container element\n      const container = document.querySelector('#image-container');\n      if (container) {\n        container.appendChild(img);\n      } else {\n        console.error(\"Container not found!\");\n      }\n    }, false);\n    if (image) {\n      reader.readAsDataURL(image);\n    }\n  }\n}\nChatComponent.ɵfac = function ChatComponent_Factory(t) {\n  return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n};\nChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatComponent,\n  selectors: [[\"cf-chat\"]],\n  decls: 31,\n  vars: 1,\n  consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-light\", \"bg-light\"], [1, \"container-fluid\"], [\"href\", \"#\", 1, \"navbar-brand\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#navbarNav\", \"aria-controls\", \"navbarNav\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [\"id\", \"navbarNav\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\"], [1, \"nav-item\"], [\"routerLink\", \"/login\", 1, \"nav-link\"], [1, \"chat\"], [1, \"container\"], [1, \"chat-content\"], [1, \"card\"], [1, \"list-group\", \"list-group-flush\"], [\"messageList\", \"\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngSubmit\"], [\"sendForm\", \"ngForm\"], [1, \"chat-send\", \"row\"], [1, \"col-2\"], [\"type\", \"text\", \"name\", \"user\", \"id\", \"input-user\", \"ngModel\", \"\", 1, \"form-control\"], [1, \"col-8\"], [\"type\", \"text\", \"name\", \"message\", \"id\", \"input-message\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"file\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"list-group-item\"], [\"alt\", \"Image\", 3, \"src\", 4, \"ngIf\"], [\"alt\", \"Image\", 3, \"src\"]],\n  template: function ChatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"header\")(1, \"nav\", 0)(2, \"div\", 1)(3, \"a\", 2);\n      i0.ɵɵtext(4, \"My App\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵelement(6, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"ul\", 6)(9, \"li\", 7)(10, \"a\", 8);\n      i0.ɵɵtext(11, \"Login\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelement(12, \"router-outlet\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"main\", 9)(14, \"div\", 10)(15, \"div\", 11)(16, \"div\", 12)(17, \"ul\", 13, 14);\n      i0.ɵɵtemplate(19, ChatComponent_li_19_Template, 6, 3, \"li\", 15);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"form\", 16, 17);\n      i0.ɵɵlistener(\"ngSubmit\", function ChatComponent_Template_form_ngSubmit_20_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r2 = i0.ɵɵreference(21);\n        return i0.ɵɵresetView(ctx.sendMessage(_r2));\n      });\n      i0.ɵɵelementStart(22, \"div\", 18)(23, \"div\", 19);\n      i0.ɵɵelement(24, \"input\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 21);\n      i0.ɵɵelement(26, \"input\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 19)(28, \"input\", 23);\n      i0.ɵɵlistener(\"change\", function ChatComponent_Template_input_change_28_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"button\", 24);\n      i0.ɵɵtext(30, \"Send\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", ctx.chatMessages);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i4.RouterOutlet, i4.RouterLink],\n  styles: [\".chat[_ngcontent-%COMP%] {\\r\\n  margin-top: 10rem;\\r\\n}\\r\\n\\r\\ndiv.chat-content[_ngcontent-%COMP%] {\\r\\n  border-radius: .25rem;\\r\\n  height: 40rem;\\r\\n  margin-bottom: 2rem;\\r\\n}\\r\\n\\r\\n.card[_ngcontent-%COMP%] {\\r\\n  height: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhdC9jaGF0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsYUFBYTtFQUNiLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFlBQVk7QUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi5jaGF0IHtcclxuICBtYXJnaW4tdG9wOiAxMHJlbTtcclxufVxyXG5cclxuZGl2LmNoYXQtY29udGVudCB7XHJcbiAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xyXG4gIGhlaWdodDogNDByZW07XHJcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcclxufVxyXG5cclxuLmNhcmQge1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["ChatMessageDto","i0","ChatComponent","constructor","chatService","sendMessage","sendForm","name","value","user","message","selectedFile","console","log","reader","FileReader","readAsDataURL","onload","base64","result","photo","split","fileName","fileType","type","chatMessageDto","subscribe","controls","reset","error","ngOnInit","getChatMessagesPolling","messages","chatMessages","ngOnDestroy","onFileSelected","event","setTimeout","target","files","createImageFromBlob","image","addEventListener","img","Image","src","container","document","querySelector","appendChild","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\studia\\chatFE\\chatApp\\src\\app\\chat\\chat.component.ts","E:\\studia\\chatFE\\chatApp\\src\\app\\chat\\chat.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {NgForm} from \"@angular/forms\";\r\nimport {ChatService} from \"../services/chat-service\";\r\nimport {ChatMessageDto} from \"../models/chatMessageDto\";\r\n\r\n@Component({\r\n  selector: 'cf-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.css']\r\n})\r\nexport class ChatComponent implements OnInit, OnDestroy{\r\n\r\n  chatMessages: ChatMessageDto[] = [];\r\n  selectedFile: File | null = null;\r\n\r\n  constructor(private chatService: ChatService) {}\r\n\r\n  sendMessage(sendForm: NgForm) {\r\n    const name = sendForm.value.user;\r\n    const message = sendForm.value.message;\r\n\r\n    if (this.selectedFile) {\r\n      console.log(\"selectedFile before reader:\", this.selectedFile);\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(this.selectedFile);\r\n      reader.onload = () => {\r\n        console.log(\"selectedFile after reader:\", this.selectedFile);\r\n        const base64 = reader.result as string;\r\n        const photo = base64.split(',')[1];\r\n        if (this.selectedFile) {\r\n          const fileName = this.selectedFile.name;\r\n          const fileType = this.selectedFile.type;\r\n          const chatMessageDto = new ChatMessageDto(name, message, photo, fileName, fileType);\r\n          this.chatService.sendMessage(chatMessageDto).subscribe(() => {\r\n            sendForm.controls['message'].reset();\r\n            this.selectedFile = null;\r\n          });\r\n        } else {\r\n          console.error(\"Selected file is null\");\r\n        }\r\n      };\r\n    } else {\r\n      const chatMessageDto = new ChatMessageDto(name, message);\r\n      this.chatService.sendMessage(chatMessageDto).subscribe(() => {\r\n        sendForm.controls['message'].reset();\r\n        this.selectedFile = null;\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.chatService.getChatMessagesPolling(5000).subscribe((messages) => {\r\n      this.chatMessages = messages;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // No need to close anything for REST API communication\r\n  }\r\n\r\n  onFileSelected(event: any) {\r\n    setTimeout(() => {\r\n      this.selectedFile = event.target.files[0];\r\n      console.log(\"File selected:\", this.selectedFile);\r\n    }, 500);\r\n  }\r\n\r\n  createImageFromBlob(image: Blob): void {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => {\r\n      // set the image data to a variable\r\n      const photo = reader.result as string;\r\n      // set the image data to an image element's source\r\n      const img = new Image();\r\n      img.src = photo;\r\n      // append the image element to a container element\r\n      const container = document.querySelector('#image-container');\r\n      if (container) {\r\n        container.appendChild(img);\r\n      } else {\r\n        console.error(\"Container not found!\");\r\n      }\r\n    }, false);\r\n\r\n    if (image) {\r\n      reader.readAsDataURL(image);\r\n    }\r\n  }\r\n}\r\n","<header>\r\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <div class=\"container-fluid\">\r\n      <a class=\"navbar-brand\" href=\"#\">My App</a>\r\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul class=\"navbar-nav\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/login\">Login</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</header>\r\n<main class=\"chat\">\r\n  <div class=\"container\">\r\n    <div class=\"chat-content\">\r\n      <div class=\"card\">\r\n        <ul class=\"list-group list-group-flush\" #messageList>\r\n          <li class=\"list-group-item\" *ngFor=\"let chatMessage of chatMessages\">\r\n            <strong>\r\n              {{chatMessage.name}}:\r\n            </strong>\r\n            <span>\r\n              {{chatMessage.message}}\r\n            </span>\r\n            <img *ngIf=\"chatMessage.photo\" [src]=\"'data:' + chatMessage.fileType + ';base64,' + chatMessage.photo\" alt=\"Image\">\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <form (ngSubmit)=\"sendMessage(sendForm)\" #sendForm=\"ngForm\">\r\n      <div class=\"chat-send row\">\r\n        <div class=\"col-2\">\r\n          <input type=\"text\" class=\"form-control\" name=\"user\" id=\"input-user\" ngModel>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <input type=\"text\" class=\"form-control\" name=\"message\" id=\"input-message\" ngModel>\r\n        </div>\r\n        <div class=\"col-2\">\r\n          <input type=\"file\" (change)=\"onFileSelected($event)\">\r\n          <button type=\"submit\" class=\"btn btn-primary\">Send</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</main>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}