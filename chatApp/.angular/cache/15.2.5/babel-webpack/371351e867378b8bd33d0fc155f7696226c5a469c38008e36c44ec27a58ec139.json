{"ast":null,"code":"import { ChatMessageDto } from \"../models/chatMessageDto\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/chat-service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nfunction ChatComponent_li_19_img_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 27);\n  }\n  if (rf & 2) {\n    const chatMessage_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"src\", \"data:\" + chatMessage_r3.fileType + \";base64,\" + chatMessage_r3.photo, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ChatComponent_li_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 25)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ChatComponent_li_19_img_5_Template, 1, 1, \"img\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const chatMessage_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", chatMessage_r3.name, \": \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", chatMessage_r3.message, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", chatMessage_r3.photo);\n  }\n}\nexport let ChatComponent = /*#__PURE__*/(() => {\n  class ChatComponent {\n    constructor(chatService) {\n      this.chatService = chatService;\n      this.chatMessages = [];\n      this.selectedFile = null;\n    }\n    sendMessage(sendForm) {\n      const name = sendForm.value.user;\n      const message = sendForm.value.message;\n      if (this.selectedFile) {\n        const reader = new FileReader();\n        reader.readAsDataURL(this.selectedFile);\n        reader.onload = () => {\n          const base64 = reader.result;\n          const photo = base64.split(',')[1];\n          if (this.selectedFile) {\n            const fileName = this.selectedFile.name;\n            const fileType = this.selectedFile.type;\n            const chatMessageDto = new ChatMessageDto(name, message, photo, fileName, fileType);\n            this.chatService.sendMessage(chatMessageDto).subscribe(() => {\n              sendForm.controls['message'].reset();\n              this.selectedFile = null;\n            });\n            this.selectedFile = null; // move this line here\n          } else {\n            console.error(\"Selected file is null\");\n          }\n        };\n      } else {\n        const fileName = '';\n        const fileType = '';\n        const photo = '';\n        const chatMessageDto = new ChatMessageDto(name, message, photo, fileName, fileType);\n        this.chatService.sendMessage(chatMessageDto).subscribe({\n          next: () => {\n            sendForm.controls['message'].reset();\n          },\n          error: err => {\n            console.error('Error sending message:', err);\n          }\n        });\n      }\n    }\n    ngOnInit() {\n      this.chatService.getChatMessagesPolling(5000).subscribe(messages => {\n        this.chatMessages = messages;\n      });\n    }\n    ngOnDestroy() {\n      // No need to close anything for REST API communication\n    }\n    onFileSelected(event) {\n      setTimeout(() => {\n        this.selectedFile = event.target.files[0];\n      }, 500);\n    }\n    createImageFromBlob(image) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => {\n        // set the image data to a variable\n        const photo = reader.result;\n        // set the image data to an image element's source\n        const img = new Image();\n        img.src = photo;\n        // append the image element to a container element\n        const container = document.querySelector('#image-container');\n        if (container) {\n          container.appendChild(img);\n        } else {\n          console.error(\"Container not found!\");\n        }\n      }, false);\n      if (image) {\n        reader.readAsDataURL(image);\n      }\n    }\n  }\n  ChatComponent.ɵfac = function ChatComponent_Factory(t) {\n    return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n  };\n  ChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatComponent,\n    selectors: [[\"cf-chat\"]],\n    decls: 31,\n    vars: 1,\n    consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-light\", \"bg-light\"], [1, \"container-fluid\"], [\"href\", \"#\", 1, \"navbar-brand\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#navbarNav\", \"aria-controls\", \"navbarNav\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [\"id\", \"navbarNav\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\"], [1, \"nav-item\"], [\"routerLink\", \"/login\", 1, \"nav-link\"], [1, \"chat\"], [1, \"container\"], [1, \"chat-content\"], [1, \"card\"], [1, \"list-group\", \"list-group-flush\"], [\"messageList\", \"\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngSubmit\"], [\"sendForm\", \"ngForm\"], [1, \"chat-send\", \"row\"], [1, \"col-2\"], [\"type\", \"text\", \"name\", \"user\", \"id\", \"input-user\", \"ngModel\", \"\", 1, \"form-control\"], [1, \"col-8\"], [\"type\", \"text\", \"name\", \"message\", \"id\", \"input-message\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"file\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"list-group-item\"], [\"alt\", \"Image\", 3, \"src\", 4, \"ngIf\"], [\"alt\", \"Image\", 3, \"src\"]],\n    template: function ChatComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r6 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"header\")(1, \"nav\", 0)(2, \"div\", 1)(3, \"a\", 2);\n        i0.ɵɵtext(4, \"My App\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵelement(6, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"ul\", 6)(9, \"li\", 7)(10, \"a\", 8);\n        i0.ɵɵtext(11, \"Login\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelement(12, \"router-outlet\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"main\", 9)(14, \"div\", 10)(15, \"div\", 11)(16, \"div\", 12)(17, \"ul\", 13, 14);\n        i0.ɵɵtemplate(19, ChatComponent_li_19_Template, 6, 3, \"li\", 15);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"form\", 16, 17);\n        i0.ɵɵlistener(\"ngSubmit\", function ChatComponent_Template_form_ngSubmit_20_listener() {\n          i0.ɵɵrestoreView(_r6);\n          const _r2 = i0.ɵɵreference(21);\n          return i0.ɵɵresetView(ctx.sendMessage(_r2));\n        });\n        i0.ɵɵelementStart(22, \"div\", 18)(23, \"div\", 19);\n        i0.ɵɵelement(24, \"input\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 21);\n        i0.ɵɵelement(26, \"input\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 19)(28, \"input\", 23);\n        i0.ɵɵlistener(\"change\", function ChatComponent_Template_input_change_28_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 24);\n        i0.ɵɵtext(30, \"Send\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngForOf\", ctx.chatMessages);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i4.RouterOutlet, i4.RouterLink],\n    styles: [\".chat[_ngcontent-%COMP%]{margin-top:10rem}div.chat-content[_ngcontent-%COMP%]{border-radius:.25rem;height:40rem;margin-bottom:2rem;overflow:auto}.card[_ngcontent-%COMP%]{height:100%}\"]\n  });\n  return ChatComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}