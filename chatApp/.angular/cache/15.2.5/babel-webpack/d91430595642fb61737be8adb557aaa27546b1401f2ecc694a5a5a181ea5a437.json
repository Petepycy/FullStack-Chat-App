{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.user = {\n      name: null,\n      password: null\n    };\n  }\n  onSubmit(user) {\n    console.log('klik');\n    this.router.navigate(['/chat']);\n    console.log(user);\n    this.http.post(\"http://localhost:4000/auth/register\", user).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.error(error);\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"cf-login\"]],\n  decls: 22,\n  vars: 3,\n  consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-light\", \"bg-light\"], [1, \"container-fluid\"], [\"href\", \"#\", 1, \"navbar-brand\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#navbarNav\", \"aria-controls\", \"navbarNav\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [\"id\", \"navbarNav\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\"], [1, \"nav-item\"], [\"routerLink\", \"/login\", 1, \"nav-link\"], [1, \"align-center\"], [3, \"ngSubmit\"], [\"myForm\", \"ngForm\"], [\"placeholder\", \"Name\", \"type\", \"text\", \"name\", \"name\", \"ngModel\", \"\", \"required\", \"\", \"email\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Password\", \"type\", \"password\", \"name\", \"password\", \"ngModel\", \"\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn-div\"], [\"type\", \"submit\", 1, \"login-btn\", 3, \"disabled\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"header\")(1, \"nav\", 0)(2, \"div\", 1)(3, \"a\", 2);\n      i0.ɵɵtext(4, \"My App\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵelement(6, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"ul\", 6)(9, \"li\", 7)(10, \"a\", 8);\n      i0.ɵɵtext(11, \"Login\");\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵelementStart(12, \"div\", 9)(13, \"h2\");\n      i0.ɵɵtext(14, \"User Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"form\", 10, 11);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_15_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(16);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0.value));\n      });\n      i0.ɵɵelementStart(17, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.user.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 14)(20, \"button\", 15);\n      i0.ɵɵtext(21, \" Login \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(16);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.EmailValidator, i3.NgModel, i3.NgForm, i1.RouterLink],\n  styles: [\".align-center[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    flex-direction: column;\\r\\n    height: 100vh;\\r\\n  }\\r\\n  \\r\\n  form[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  input[_ngcontent-%COMP%] {\\r\\n    margin: 12px;\\r\\n    padding: 8px;\\r\\n    width: 14rem;\\r\\n  }\\r\\n  \\r\\n  input[type=\\\"password\\\" i][_ngcontent-%COMP%] {\\r\\n    margin-top: 6px;\\r\\n  }\\r\\n  \\r\\n  .btn-div[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n  \\r\\n  .btn-div[_ngcontent-%COMP%]   .login-btn[_ngcontent-%COMP%] {\\r\\n    width: 15rem;\\r\\n    padding: 6px;\\r\\n    font-size: 14px;\\r\\n    background: orange;\\r\\n    outline: none;\\r\\n    border: none;\\r\\n    border-radius: 4px;\\r\\n    color: white;\\r\\n    font-weight: 700;\\r\\n    cursor: pointer;\\r\\n    letter-spacing: 1px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLHNCQUFzQjtJQUN0QixhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxhQUFhO0lBQ2Isc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsWUFBWTtJQUNaLFlBQVk7SUFDWixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7RUFDekI7O0VBRUE7SUFDRSxZQUFZO0lBQ1osWUFBWTtJQUNaLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2YsbUJBQW1CO0VBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiLmFsaWduLWNlbnRlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgfVxyXG4gIFxyXG4gIGZvcm0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0IHtcclxuICAgIG1hcmdpbjogMTJweDtcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICAgIHdpZHRoOiAxNHJlbTtcclxuICB9XHJcbiAgXHJcbiAgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCIgaV0ge1xyXG4gICAgbWFyZ2luLXRvcDogNnB4O1xyXG4gIH1cclxuICBcclxuICAuYnRuLWRpdiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIH1cclxuICBcclxuICAuYnRuLWRpdiAubG9naW4tYnRuIHtcclxuICAgIHdpZHRoOiAxNXJlbTtcclxuICAgIHBhZGRpbmc6IDZweDtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIGJhY2tncm91bmQ6IG9yYW5nZTtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,cAAc;EAOzBC,YACUC,MAAc,EACdC,IAAgB;IADhB,WAAM,GAAND,MAAM;IACN,SAAI,GAAJC,IAAI;IAPd,SAAI,GAAG;MACLC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE;KACX;EAKE;EAEHC,QAAQ,CAACC,IAAS;IAChBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC/BF,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,IAAI,CAACJ,IAAI,CAACQ,IAAI,CAAC,qCAAqC,EAAEJ,IAAI,CAAC,CAACK,SAAS,CAClEC,QAAQ,IAAI;MACXL,OAAO,CAACC,GAAG,CAACI,QAAQ,CAAC;IACvB,CAAC,EACAC,KAAK,IAAI;MACRN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;;AAxBWd,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCV3BC,8BAAQ;MAG+BA,sBAAM;MAAAA,iBAAI;MAC3CA,iCACiF;MAC/EA,0BAAyC;MAC3CA,iBAAS;MACTA,8BAAqD;MAGPA,sBAAK;MAAAA,iBAAI;MAO7DA,+BAA0B;MAClBA,2BAAU;MAAAA,iBAAK;MACnBA,qCAA2D;MAApCA;QAAAA;QAAA;QAAA,OAAYA,sCAAsB;MAAA,EAAC;MAExDA,kCAQE;MAJAA;QAAA;MAAA,EAAuB;MAJzBA,iBAQE;MACFA,kCAOE;MAHAA;QAAA;MAAA,EAA2B;MAJ7BA,iBAOE;MACFA,gCAAqB;MAEjBA,wBACF;MAAAA,iBAAS;;;;MAhBTA,gBAAuB;MAAvBA,uCAAuB;MASvBA,eAA2B;MAA3BA,2CAA2B;MAKLA,eAA0B;MAA1BA,qCAA0B","names":["LoginComponent","constructor","router","http","name","password","onSubmit","user","console","log","navigate","post","subscribe","response","error","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["E:\\studia\\chatFE\\chatApp\\src\\app\\login\\login.component.ts","E:\\studia\\chatFE\\chatApp\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'cf-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  user = {\n    name: null,\n    password: null\n  };\n\n  constructor(\n    private router: Router,\n    private http: HttpClient\n  ) {}\n\n  onSubmit(user: any) {\n    console.log('klik');\n    this.router.navigate(['/chat']);\n    console.log(user);\n    this.http.post(\"http://localhost:4000/auth/register\", user).subscribe(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n}\n","<header>\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\">My App</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/login\">Login</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</header>\n<div class=\"align-center\">\n    <h2>User Login</h2>\n    <form #myForm=\"ngForm\" (ngSubmit)=\"onSubmit(myForm.value)\">\n  \n      <input\n        placeholder=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        [(ngModel)]=\"user.name\"\n        ngModel\n        required\n        email\n      />\n      <input\n        placeholder=\"Password\"\n        type=\"password\"\n        name=\"password\"\n        [(ngModel)]=\"user.password\"\n        ngModel\n        required\n      />\n      <div class=\"btn-div\">\n        <button type=\"submit\" [disabled]=\"!myForm.valid\" class=\"login-btn\">\n          Login\n        </button>\n      </div>\n    </form>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}